# Generated by Django 2.2.7 on 2019-12-25 20:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elapsed_time', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassificationMetrics',
            fields=[
                ('evaluation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='evaluation.Evaluation')),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('evaluation.evaluation',),
        ),
        migrations.CreateModel(
            name='RegressionMetrics',
            fields=[
                ('evaluation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='evaluation.Evaluation')),
                ('rmse', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('rscore', models.FloatField(blank=True, null=True)),
                ('mape', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('evaluation.evaluation',),
        ),
        migrations.CreateModel(
            name='TimeSeriesPredictionMetrics',
            fields=[
                ('evaluation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='evaluation.Evaluation')),
                ('nlevenshtein', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('evaluation.evaluation',),
        ),
        migrations.CreateModel(
            name='BinaryClassificationMetrics',
            fields=[
                ('classificationmetrics_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='evaluation.ClassificationMetrics')),
                ('true_positive', models.FloatField(blank=True, null=True)),
                ('true_negative', models.FloatField(blank=True, null=True)),
                ('false_negative', models.FloatField(blank=True, null=True)),
                ('false_positive', models.FloatField(blank=True, null=True)),
                ('auc', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('evaluation.classificationmetrics',),
        ),
        migrations.CreateModel(
            name='MulticlassClassificationMetrics',
            fields=[
                ('classificationmetrics_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='evaluation.ClassificationMetrics')),
            ],
            options={
                'abstract': False,
            },
            bases=('evaluation.classificationmetrics',),
        ),
    ]
